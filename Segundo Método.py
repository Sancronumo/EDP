# -*- coding: utf-8 -*-
"""SeriesDeFourier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-FKuoFvCsAiSBv_DfTMfy-pE9FghMkCp
"""

import numpy as np
import scipy.integrate as integrate
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


x = np.linspace(0,10,num=20)
t = np.linspace(0,10,num=50)

n_max = 10

def CalcularKn(n):
    kn = (np.pi*n)/Lx
    return kn

def CalcularIntegrando(x,n):
    Lx = 10
    x0 = 5
    l = 1.5
    A = 2
    integrando=A*np.exp((-(x-x0)**2)/l)*np.sin(CalcularKn(n)*x)
    return integrando

def CalcularCn(x,n):
    Lx = 10
    Cn=integrate.quad(CalcularIntegrando, 0, Lx,args=(n))
    Cn=2/Lx*Cn[0]
    return Cn

def fourierSeries(n_max,x,t):
    partialSums = 0
    for n in range(1,n_max):
        exponencial=np.exp(-D*(CalcularKn(n))**2*t)
        partialSums += CalcularCn(x,n)*exponencial*np.sin(CalcularKn(n)*x)
    return partialSums

D = 0.5
Lx = 10
u = np.zeros([len(t),len(x)])
for j in range(0,len(t)):
    for i in range(0,len(x)):
        u[j,i]=fourierSeries(n_max,x[i],t[j])

plt.plot(x,u[0])

fig=plt.figure()
ax=Axes3D(fig)
X, T= np.meshgrid(x,t)
ax.plot_surface(X,T,u)
ax.set_xlabel('Valores de espacio')
ax.set_ylabel('Valores de tiempo')
ax.set_zlabel('Valores de calor')
plt.show()

